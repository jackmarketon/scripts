default_username='jack'

if which thefuck > /dev/null; then
	eval "$(thefuck --alias)"
fi;

set_prompts() {
	local black="" blue="" bold="" cyan="" green="" orange="" \
          purple="" red="" reset="" white="" yellow=""

    bold=""
    reset="\e[0m"

    black="\e[1;30m"
    blue="\e[1;34m"
    cyan="\e[1;36m"
    green="\e[1;32m"
    orange="\e[1;33m"
    purple="\e[1;35m"
    red="\e[1;31m"
    magenta="\e[1;35m"
    violet="\e[1;35m"
    white="\e[1;37m"
    yellow="\e[1;33m"



	function prompt_git() {
        # this is >5x faster than mathias's.
        # check if we're in a git repo. (fast)
        git rev-parse --is-inside-work-tree &>/dev/null || return

        # check for what branch we're on. (fast)
        #   if… HEAD isn’t a symbolic ref (typical branch),
        #   then… get a tracking remote branch or tag
        #   otherwise… get the short SHA for the latest commit
        #   lastly just give up.
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
            git describe --all --exact-match HEAD 2> /dev/null || \
            git rev-parse --short HEAD 2> /dev/null || \
            echo '(unknown)')";


        ## early exit for Chromium & Blink repo, as the dirty check takes ~5s
        ## also recommended (via goo.gl/wAVZLa ) : sudo sysctl kern.maxvnodes=$((512*1024))
        repoUrl=$(git config --get remote.origin.url)

        # check if it's dirty (slow)
        #   technique via github.com/git/git/blob/355d4e173/contrib/completion/git-prompt.sh#L472-L475
        dirty=$(git diff --no-ext-diff --quiet --ignore-submodules --exit-code || echo -e " ❊")

        # mathias has a few more checks some may like:
        #    github.com/mathiasbynens/dotfiles/blob/a8bd0d4300/.bash_prompt#L30-L43


        [ -n "${s}" ] && s=" [${s}]";
        echo -e "${3}=[${1}${branchName}${2}$dirty${3}]=";

        return
    }

    # ------------------------------------------------------------------
    # | Prompt string                                                  |
    # ------------------------------------------------------------------
    PS1="\[\033]0;\w\007\]"                                 # terminal title (set to the current working directory)
    PS1+="\[$red\]=[\[$blue\]\t\[$red\]]"
    PS1+="=(\[$blue\]\u@\h\[$red\])"
    PS1+="=(\[$blue\]\W\[$red\])="
    PS1+="\$(prompt_git \"$cyan\" \"$magenta\" \"$red\")"   # git repository details
    PS1+="\n\[$red\]=>\[$reset\] "

    export PS1

    # ------------------------------------------------------------------
    # | Subshell prompt string                                         |
    # ------------------------------------------------------------------

    export PS2="⚡ "
}

set_prompts
unset set_prompts
